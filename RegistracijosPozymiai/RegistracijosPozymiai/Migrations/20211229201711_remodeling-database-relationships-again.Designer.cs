// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistracijosPozymiai.Data;

namespace RegistracijosPozymiai.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211229201711_remodeling-database-relationships-again")]
    partial class remodelingdatabaserelationshipsagain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RegistracijosPozymiai.Models.FormedRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("FormedRegistrations");
                });

            modelBuilder.Entity("RegistracijosPozymiai.Models.RegAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegAttributes");
                });

            modelBuilder.Entity("RegistracijosPozymiai.Models.RegValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistrationAttributeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistrationAttributeId");

                    b.ToTable("RegValues");
                });

            modelBuilder.Entity("RegistracijosPozymiai.Models.ValueRegistration", b =>
                {
                    b.Property<int>("FormedRegistrationId")
                        .HasColumnType("int");

                    b.Property<int>("RegValueId")
                        .HasColumnType("int");

                    b.HasKey("FormedRegistrationId", "RegValueId");

                    b.HasIndex("RegValueId");

                    b.ToTable("ValueRegistrations");
                });

            modelBuilder.Entity("RegistracijosPozymiai.Models.RegValue", b =>
                {
                    b.HasOne("RegistracijosPozymiai.Models.RegAttribute", "RegistrationAttribute")
                        .WithMany("RegistrationValues")
                        .HasForeignKey("RegistrationAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistrationAttribute");
                });

            modelBuilder.Entity("RegistracijosPozymiai.Models.ValueRegistration", b =>
                {
                    b.HasOne("RegistracijosPozymiai.Models.FormedRegistration", "FormedRegistration")
                        .WithMany("ValueRegistrations")
                        .HasForeignKey("FormedRegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegistracijosPozymiai.Models.RegValue", "RegValue")
                        .WithMany("ValueRegistrations")
                        .HasForeignKey("RegValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormedRegistration");

                    b.Navigation("RegValue");
                });

            modelBuilder.Entity("RegistracijosPozymiai.Models.FormedRegistration", b =>
                {
                    b.Navigation("ValueRegistrations");
                });

            modelBuilder.Entity("RegistracijosPozymiai.Models.RegAttribute", b =>
                {
                    b.Navigation("RegistrationValues");
                });

            modelBuilder.Entity("RegistracijosPozymiai.Models.RegValue", b =>
                {
                    b.Navigation("ValueRegistrations");
                });
#pragma warning restore 612, 618
        }
    }
}
